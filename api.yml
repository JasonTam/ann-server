swagger: "2.0"
info:
  version: 0.0.1
  title: Approximate Nearest Neighbor [ANN] Server
host: 54.198.0.33:8000

paths:
  /:
    get:
      summary: Healthcheck for service
      responses:
        "200":
          description: An array of loaded ANN indexes (Healthcheck)
          schema:
            type: array
            items:
              type: string
            example: ["W-DRESSES","W-HATS","M-OUTERWEAR"]
  /ann/{indexName}:
    get:
      summary: Healthcheck for specific ANN index
      operationId: showAnnByName
      parameters:
        - name: indexName
          in: path
          required: true
          description: The name of the ANN index
          type: string
      responses:
        "200":
          description: ANN Metadata (Healthcheck)
          schema:
            $ref: '#/definitions/ann_summary'

  /ann/{indexName}/query:
    post:
      summary: Query the ANN index for neighbors
      operationId: queryAnn
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: indexName
          in: path
          required: true
          description: The name of the ANN index
          type: string
        - name: idsPayload
          in: body
          description: Query payload
          schema:
            $ref: '#/definitions/query_payload'
      responses:
        "200":
          description: batch of list of neighbors
          schema:
            $ref: '#/definitions/batch_neighbors'

  /ann/{indexName}/refresh:
    post:
      summary: Reload the particular ANN index (may take some time)
      operationId: reloadAnn
      parameters:
        - name: indexName
          in: path
          required: true
          description: The name of the ANN index
          type: string
      responses:
        "200":
          description: Index successfully reloaded

definitions:
  variant_id:
    type: string
    example: '123'
  variant_ids:
    type: array
    items:
      $ref: '#/definitions/variant_id'
    example: [ "123", "456", "789"]
  batch_neighbors:
    type: array
    items:
      $ref: '#/definitions/variant_ids'
    example: [
      ["123", "1231", "1232", "1233", "1234"],
      ["456", "4561", "4562", "4563", "4564"],
      ["789", "7891", "7892", "7893", "7894"]
    ]


  query_payload:
    properties:
      k:
        description: number of neighbors to get (note- the first neighbor will be the same as the query, so ask for 1 more than you actually want)
        type: integer
        example: 5
      search_k:
        description: number of nodes to inspect (leave as -1 if unsure)
        type: integer
        example: -1
      ids:
        $ref: '#/definitions/variant_ids'

  ann_summary:
    properties:
      path_tar:
        type: string
        example: 'mo-ml-dev/ann/C-HATS.tar.gz'
      ann_meta:
        properties:
          vec_src:
            type: string
            example: 'dynamoDB:img-reprs'
          metric:
            type: string
            example: 'angular'
          n_dim:
            type: integer
            example: 1024
          timestamp_utc:
            type: string
            example: '2019-04-11T02:47:18.240980'
      ts_read:
        type: integer
        example: 1555004178
      n_ids:
        type: integer
        example: 1007
      head5_ids:
        type: array
        items:
          type: string
